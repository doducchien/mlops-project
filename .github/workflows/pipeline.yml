name: Run Pipeline

on:
  push:
    branches:
      - main

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dvc
          pip install -r requirements.txt

      - name: Execute Pipeline Tasks
        run: |
          flows:
            main_pipeline:
              name: Main Pipeline
              description: Full pipeline for MLOps including triggers, fine-tuning, and deployment.

              tasks:
                - name: check_data
                  description: Check if data or models have changed using DVC.
                  commands:
                    - if [[ $(dvc status) != "Data and pipelines are up to date." ]]; then
                        echo "Data has changed. Proceeding to fine-tune."
                        touch proceed_to_fine_tune
                      else
                        echo "No changes in data. Skipping fine-tune."
                      fi

                - name: fine_tune_model
                  description: Fine-tune GPT-2 model only if changes are detected.
                  conditions:
                    exists: proceed_to_fine_tune  # Run only if the trigger file exists
                  commands:
                    - python src/train_model.py
                    - dvc add models/fine_tuned_gpt2
                    - git add models/fine_tuned_gpt2.dvc
                    - git commit -m "Fine-tuned GPT-2 model updated with DVC"
                    - git push origin main
                    - dvc push

                - name: deploy_api
                  description: Build and deploy the fine-tuned GPT-2 model as an API using Docker.
                  commands:
                    - docker build -t gpt2-api .
                    - docker run -d -p 8000:8000 gpt2-api

                - name: monitor_model
                  description: Monitor the deployed model and log performance metrics.
                  commands:
                    - python src/monitoring.py
